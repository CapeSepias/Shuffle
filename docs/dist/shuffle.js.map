{"version":3,"file":"shuffle.js","sources":["../node_modules/tiny-emitter/index.js","../node_modules/throttleit/index.js","../node_modules/array-parallel/index.js","../src/get-number.js","../src/point.js","../src/rect.js","../src/classes.js","../src/shuffle-item.js","../src/computed-size.js","../src/get-number-style.js","../src/sorter.js","../src/on-transition-end.js","../src/array-max.js","../src/array-min.js","../src/layout.js","../src/hyphenate.js","../src/shuffle.js"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","module.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle (func, wait) {\n  var ctx, args, rtn, timeoutID; // caching\n  var last = 0;\n\n  return function throttled () {\n    ctx = this;\n    args = arguments;\n    var delta = new Date() - last;\n    if (!timeoutID)\n      if (delta >= wait) call();\n      else timeoutID = setTimeout(call, wait - delta);\n    return rtn;\n  };\n\n  function call () {\n    timeoutID = 0;\n    last = +new Date();\n    rtn = func.apply(ctx, args);\n    ctx = null;\n    args = null;\n  }\n}\n","module.exports = function parallel(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  var pending = fns && fns.length\n  if (!pending) return callback(null, []);\n\n  var finished = false\n  var results = new Array(pending)\n\n  fns.forEach(context ? function (fn, i) {\n    fn.call(context, maybeDone(i))\n  } : function (fn, i) {\n    fn(maybeDone(i))\n  })\n\n  function maybeDone(i) {\n    return function (err, result) {\n      if (finished) return;\n\n      if (err) {\n        callback(err, results)\n        finished = true\n        return\n      }\n\n      results[i] = result\n\n      if (!--pending) callback(null, results);\n    }\n  }\n}\n\nfunction noop() {}\n","/**\n * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\n * @param {*} value Possibly numeric value.\n * @return {number} `value` or zero if `value` isn't numeric.\n */\nexport default function getNumber(value) {\n  return parseFloat(value) || 0;\n}\n","import getNumber from './get-number';\n\nclass Point {\n  /**\n   * Represents a coordinate pair.\n   * @param {number} [x=0] X.\n   * @param {number} [y=0] Y.\n   */\n  constructor(x, y) {\n    this.x = getNumber(x);\n    this.y = getNumber(y);\n  }\n\n  /**\n   * Whether two points are equal.\n   * @param {Point} a Point A.\n   * @param {Point} b Point B.\n   * @return {boolean}\n   */\n  static equals(a, b) {\n    return a.x === b.x && a.y === b.y;\n  }\n}\n\nexport default Point;\n","export default class Rect {\n  /**\n   * Class for representing rectangular regions.\n   * https://github.com/google/closure-library/blob/master/closure/goog/math/rect.js\n   * @param {number} x Left.\n   * @param {number} y Top.\n   * @param {number} w Width.\n   * @param {number} h Height.\n   * @param {number} id Identifier\n   * @constructor\n   */\n  constructor(x, y, w, h, id) {\n    this.id = id;\n\n    /** @type {number} */\n    this.left = x;\n\n    /** @type {number} */\n    this.top = y;\n\n    /** @type {number} */\n    this.width = w;\n\n    /** @type {number} */\n    this.height = h;\n  }\n\n  /**\n   * Returns whether two rectangles intersect.\n   * @param {Rect} a A Rectangle.\n   * @param {Rect} b A Rectangle.\n   * @return {boolean} Whether a and b intersect.\n   */\n  static intersects(a, b) {\n    return (\n      a.left < b.left + b.width && b.left < a.left + a.width && a.top < b.top + b.height && b.top < a.top + a.height\n    );\n  }\n}\n","export default {\n  BASE: 'shuffle',\n  SHUFFLE_ITEM: 'shuffle-item',\n  VISIBLE: 'shuffle-item--visible',\n  HIDDEN: 'shuffle-item--hidden',\n};\n","import Point from './point';\nimport Classes from './classes';\n\nlet id = 0;\n\nclass ShuffleItem {\n  constructor(element, isRTL) {\n    id += 1;\n    this.id = id;\n    this.element = element;\n\n    /**\n     * Set correct direction of item\n     */\n    this.isRTL = isRTL;\n\n    /**\n     * Used to separate items for layout and shrink.\n     */\n    this.isVisible = true;\n\n    /**\n     * Used to determine if a transition will happen. By the time the _layout\n     * and _shrink methods get the ShuffleItem instances, the `isVisible` value\n     * has already been changed by the separation methods, so this property is\n     * needed to know if the item was visible/hidden before the shrink/layout.\n     */\n    this.isHidden = false;\n  }\n\n  show() {\n    this.isVisible = true;\n    this.element.classList.remove(Classes.HIDDEN);\n    this.element.classList.add(Classes.VISIBLE);\n    this.element.removeAttribute('aria-hidden');\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.element.classList.remove(Classes.VISIBLE);\n    this.element.classList.add(Classes.HIDDEN);\n    this.element.setAttribute('aria-hidden', true);\n  }\n\n  init() {\n    this.addClasses([Classes.SHUFFLE_ITEM, Classes.VISIBLE]);\n    this.applyCss(ShuffleItem.Css.INITIAL);\n    this.applyCss(this.isRTL ? ShuffleItem.Css.DIRECTION.rtl : ShuffleItem.Css.DIRECTION.ltr);\n    this.scale = ShuffleItem.Scale.VISIBLE;\n    this.point = new Point();\n  }\n\n  addClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.add(className);\n    });\n  }\n\n  removeClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.remove(className);\n    });\n  }\n\n  applyCss(obj) {\n    Object.keys(obj).forEach((key) => {\n      this.element.style[key] = obj[key];\n    });\n  }\n\n  dispose() {\n    this.removeClasses([Classes.HIDDEN, Classes.VISIBLE, Classes.SHUFFLE_ITEM]);\n\n    this.element.removeAttribute('style');\n    this.element = null;\n  }\n}\n\nShuffleItem.Css = {\n  INITIAL: {\n    position: 'absolute',\n    top: 0,\n    visibility: 'visible',\n    willChange: 'transform',\n  },\n  DIRECTION: {\n    ltr: {\n      left: 0,\n    },\n    rtl: {\n      right: 0,\n    },\n  },\n  VISIBLE: {\n    before: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n    after: {\n      transitionDelay: '',\n    },\n  },\n  HIDDEN: {\n    before: {\n      opacity: 0,\n    },\n    after: {\n      visibility: 'hidden',\n      transitionDelay: '',\n    },\n  },\n};\n\nShuffleItem.Scale = {\n  VISIBLE: 1,\n  HIDDEN: 0.001,\n};\n\nexport default ShuffleItem;\n","import getNumber from './get-number';\n\nlet value = null;\nexport default () => {\n  if (value !== null) {\n    return value;\n  }\n\n  const element = document.body || document.documentElement;\n  const e = document.createElement('div');\n  e.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\n  element.appendChild(e);\n\n  const { width } = window.getComputedStyle(e, null);\n  // Fix for issue #314\n  value = Math.round(getNumber(width)) === 10;\n\n  element.removeChild(e);\n\n  return value;\n};\n","import getNumber from './get-number';\nimport testComputedSize from './computed-size';\n\n/**\n * Retrieve the computed style for an element, parsed as a float.\n * @param {Element} element Element to get style for.\n * @param {string} style Style property.\n * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\n *     use instead of asking for them again.\n * @return {number} The parsed computed value or zero if that fails because IE\n *     will return 'auto' when the element doesn't have margins instead of\n *     the computed style.\n */\nexport default function getNumberStyle(element, style, styles = window.getComputedStyle(element, null)) {\n  let value = getNumber(styles[style]);\n\n  // Support IE<=11 and W3C spec.\n  if (!testComputedSize() && style === 'width') {\n    value +=\n      getNumber(styles.paddingLeft) +\n      getNumber(styles.paddingRight) +\n      getNumber(styles.borderLeftWidth) +\n      getNumber(styles.borderRightWidth);\n  } else if (!testComputedSize() && style === 'height') {\n    value +=\n      getNumber(styles.paddingTop) +\n      getNumber(styles.paddingBottom) +\n      getNumber(styles.borderTopWidth) +\n      getNumber(styles.borderBottomWidth);\n  }\n\n  return value;\n}\n","/**\n * Fisher-Yates shuffle.\n * http://stackoverflow.com/a/962890/373422\n * https://bost.ocks.org/mike/shuffle/\n * @param {Array} array Array to shuffle.\n * @return {Array} Randomly sorted array.\n */\nfunction randomize(array) {\n  let n = array.length;\n\n  while (n) {\n    n -= 1;\n    const i = Math.floor(Math.random() * (n + 1));\n    const temp = array[i];\n    array[i] = array[n];\n    array[n] = temp;\n  }\n\n  return array;\n}\n\nconst defaults = {\n  // Use array.reverse() to reverse the results\n  reverse: false,\n\n  // Sorting function\n  by: null,\n\n  // Custom sort function\n  compare: null,\n\n  // If true, this will skip the sorting and return a randomized order in the array\n  randomize: false,\n\n  // Determines which property of each item in the array is passed to the\n  // sorting method.\n  key: 'element',\n};\n\n/**\n * You can return `undefined` from the `by` function to revert to DOM order.\n * @param {Array<T>} arr Array to sort.\n * @param {SortOptions} options Sorting options.\n * @return {Array<T>}\n */\nexport default function sorter(arr, options) {\n  const opts = { ...defaults, ...options };\n  const original = Array.from(arr);\n  let revert = false;\n\n  if (!arr.length) {\n    return [];\n  }\n\n  if (opts.randomize) {\n    return randomize(arr);\n  }\n\n  // Sort the elements by the opts.by function.\n  // If we don't have opts.by, default to DOM order\n  if (typeof opts.by === 'function') {\n    arr.sort((a, b) => {\n      // Exit early if we already know we want to revert\n      if (revert) {\n        return 0;\n      }\n\n      const valA = opts.by(a[opts.key]);\n      const valB = opts.by(b[opts.key]);\n\n      // If both values are undefined, use the DOM order\n      if (valA === undefined && valB === undefined) {\n        revert = true;\n        return 0;\n      }\n\n      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\n        return -1;\n      }\n\n      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\n        return 1;\n      }\n\n      return 0;\n    });\n  } else if (typeof opts.compare === 'function') {\n    arr.sort(opts.compare);\n  }\n\n  // Revert to the original array if necessary\n  if (revert) {\n    return original;\n  }\n\n  if (opts.reverse) {\n    arr.reverse();\n  }\n\n  return arr;\n}\n","const transitions = {};\nconst eventName = 'transitionend';\nlet count = 0;\n\nfunction uniqueId() {\n  count += 1;\n  return eventName + count;\n}\n\nexport function cancelTransitionEnd(id) {\n  if (transitions[id]) {\n    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\n    transitions[id] = null;\n    return true;\n  }\n\n  return false;\n}\n\nexport function onTransitionEnd(element, callback) {\n  const id = uniqueId();\n  const listener = (evt) => {\n    if (evt.currentTarget === evt.target) {\n      cancelTransitionEnd(id);\n      callback(evt);\n    }\n  };\n\n  element.addEventListener(eventName, listener);\n\n  transitions[id] = { element, listener };\n\n  return id;\n}\n","export default function arrayMax(array) {\n  return Math.max(...array);\n}\n","export default function arrayMin(array) {\n  return Math.min(...array);\n}\n","import Point from './point';\nimport Rect from './rect';\nimport arrayMax from './array-max';\nimport arrayMin from './array-min';\n\n/**\n * Determine the number of columns an items spans.\n * @param {number} itemWidth Width of the item.\n * @param {number} columnWidth Width of the column (includes gutter).\n * @param {number} columns Total number of columns\n * @param {number} threshold A buffer value for the size of the column to fit.\n * @return {number}\n */\nexport function getColumnSpan(itemWidth, columnWidth, columns, threshold) {\n  let columnSpan = itemWidth / columnWidth;\n\n  // If the difference between the rounded column span number and the\n  // calculated column span number is really small, round the number to\n  // make it fit.\n  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\n    // e.g. columnSpan = 4.0089945390298745\n    columnSpan = Math.round(columnSpan);\n  }\n\n  // Ensure the column span is not more than the amount of columns in the whole layout.\n  return Math.min(Math.ceil(columnSpan), columns);\n}\n\n/**\n * Retrieves the column set to use for placement.\n * @param {number} columnSpan The number of columns this current item spans.\n * @param {number} columns The total columns in the grid.\n * @return {Array.<number>} An array of numbers represeting the column set.\n */\nexport function getAvailablePositions(positions, columnSpan, columns) {\n  // The item spans only one column.\n  if (columnSpan === 1) {\n    return positions;\n  }\n\n  // The item spans more than one column, figure out how many different\n  // places it could fit horizontally.\n  // The group count is the number of places within the positions this block\n  // could fit, ignoring the current positions of items.\n  // Imagine a 2 column brick as the second item in a 4 column grid with\n  // 10px height each. Find the places it would fit:\n  // [20, 10, 10, 0]\n  //  |   |   |\n  //  *   *   *\n  //\n  // Then take the places which fit and get the bigger of the two:\n  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 10]\n  //\n  // Next, find the first smallest number (the short column).\n  // [20, 10, 10]\n  //      |\n  //      *\n  //\n  // And that's where it should be placed!\n  //\n  // Another example where the second column's item extends past the first:\n  // [10, 20, 10, 0] => [20, 20, 10] => 10\n  const available = [];\n\n  // For how many possible positions for this item there are.\n  for (let i = 0; i <= columns - columnSpan; i++) {\n    // Find the bigger value for each place it could fit.\n    available.push(arrayMax(positions.slice(i, i + columnSpan)));\n  }\n\n  return available;\n}\n\n/**\n * Find index of short column, the first from the left where this item will go.\n *\n * @param {Array.<number>} positions The array to search for the smallest number.\n * @param {number} buffer Optional buffer which is very useful when the height\n *     is a percentage of the width.\n * @return {number} Index of the short column.\n */\nexport function getShortColumn(positions, buffer) {\n  const minPosition = arrayMin(positions);\n  for (let i = 0, len = positions.length; i < len; i++) {\n    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\n      return i;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Determine the location of the next item, based on its size.\n * @param {Object} itemSize Object with width and height.\n * @param {Array.<number>} positions Positions of the other current items.\n * @param {number} gridSize The column width or row height.\n * @param {number} total The total number of columns or rows.\n * @param {number} threshold Buffer value for the column to fit.\n * @param {number} buffer Vertical buffer for the height of items.\n * @return {Point}\n */\nexport function getItemPosition({ itemSize, positions, gridSize, total, threshold, buffer }) {\n  const span = getColumnSpan(itemSize.width, gridSize, total, threshold);\n  const setY = getAvailablePositions(positions, span, total);\n  const shortColumnIndex = getShortColumn(setY, buffer);\n\n  // Position the item\n  const point = new Point(gridSize * shortColumnIndex, setY[shortColumnIndex]);\n\n  // Update the columns array with the new values for each column.\n  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\n  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\n  const setHeight = setY[shortColumnIndex] + itemSize.height;\n  for (let i = 0; i < span; i++) {\n    positions[shortColumnIndex + i] = setHeight;\n  }\n\n  return point;\n}\n\n/**\n * This method attempts to center items. This method could potentially be slow\n * with a large number of items because it must place items, then check every\n * previous item to ensure there is no overlap.\n * @param {Array.<Rect>} itemRects Item data objects.\n * @param {number} containerWidth Width of the containing element.\n * @return {Array.<Point>}\n */\nexport function getCenteredPositions(itemRects, containerWidth) {\n  const rowMap = {};\n\n  // Populate rows by their offset because items could jump between rows like:\n  // a   c\n  //  bbb\n  itemRects.forEach((itemRect) => {\n    if (rowMap[itemRect.top]) {\n      // Push the point to the last row array.\n      rowMap[itemRect.top].push(itemRect);\n    } else {\n      // Start of a new row.\n      rowMap[itemRect.top] = [itemRect];\n    }\n  });\n\n  // For each row, find the end of the last item, then calculate\n  // the remaining space by dividing it by 2. Then add that\n  // offset to the x position of each point.\n  let rects = [];\n  const rows = [];\n  const centeredRows = [];\n  Object.keys(rowMap).forEach((key) => {\n    const itemRects = rowMap[key];\n    rows.push(itemRects);\n    const lastItem = itemRects[itemRects.length - 1];\n    const end = lastItem.left + lastItem.width;\n    const offset = Math.round((containerWidth - end) / 2);\n\n    let finalRects = itemRects;\n    let canMove = false;\n    if (offset > 0) {\n      const newRects = [];\n      canMove = itemRects.every((r) => {\n        const newRect = new Rect(r.left + offset, r.top, r.width, r.height, r.id);\n\n        // Check all current rects to make sure none overlap.\n        const noOverlap = !rects.some((r) => Rect.intersects(newRect, r));\n\n        newRects.push(newRect);\n        return noOverlap;\n      });\n\n      // If none of the rectangles overlapped, the whole group can be centered.\n      if (canMove) {\n        finalRects = newRects;\n      }\n    }\n\n    // If the items are not going to be offset, ensure that the original\n    // placement for this row will not overlap previous rows (row-spanning\n    // elements could be in the way).\n    if (!canMove) {\n      let intersectingRect;\n      const hasOverlap = itemRects.some((itemRect) =>\n        rects.some((r) => {\n          const intersects = Rect.intersects(itemRect, r);\n          if (intersects) {\n            intersectingRect = r;\n          }\n          return intersects;\n        }),\n      );\n\n      // If there is any overlap, replace the overlapping row with the original.\n      if (hasOverlap) {\n        const rowIndex = centeredRows.findIndex((items) => items.includes(intersectingRect));\n        centeredRows.splice(rowIndex, 1, rows[rowIndex]);\n      }\n    }\n\n    rects = rects.concat(finalRects);\n    centeredRows.push(finalRects);\n  });\n\n  // Reduce array of arrays to a single array of points.\n  // https://stackoverflow.com/a/10865042/373422\n  // Then reset sort back to how the items were passed to this method.\n  // Remove the wrapper object with index, map to a Point.\n  return centeredRows\n    .flat()\n    .sort((a, b) => a.id - b.id)\n    .map((itemRect) => new Point(itemRect.left, itemRect.top));\n}\n","/**\n * Hyphenates a javascript style string to a css one. For example:\n * MozBoxSizing -> -moz-box-sizing.\n * @param {string} str The string to hyphenate.\n * @return {string} The hyphenated string.\n */\nexport default function hyphenate(str) {\n  return str.replace(/([A-Z])/g, (str, m1) => `-${m1.toLowerCase()}`);\n}\n","import TinyEmitter from 'tiny-emitter';\nimport throttle from 'throttleit';\nimport parallel from 'array-parallel';\n\nimport Point from './point';\nimport Rect from './rect';\nimport ShuffleItem from './shuffle-item';\nimport Classes from './classes';\nimport getNumberStyle from './get-number-style';\nimport sorter from './sorter';\nimport { onTransitionEnd, cancelTransitionEnd } from './on-transition-end';\nimport { getItemPosition, getColumnSpan, getAvailablePositions, getShortColumn, getCenteredPositions } from './layout';\nimport arrayMax from './array-max';\nimport hyphenate from './hyphenate';\n\nfunction arrayUnique(x) {\n  return Array.from(new Set(x));\n}\n\n// Used for unique instance variables\nlet id = 0;\n\nclass Shuffle extends TinyEmitter {\n  /**\n   * Categorize, sort, and filter a responsive grid of items.\n   *\n   * @param {Element} element An element which is the parent container for the grid items.\n   * @param {Object} [options=Shuffle.options] Options object.\n   * @constructor\n   */\n  constructor(element, options = {}) {\n    super();\n    this.options = { ...Shuffle.options, ...options };\n\n    this.lastSort = {};\n    this.group = Shuffle.ALL_ITEMS;\n    this.lastFilter = Shuffle.ALL_ITEMS;\n    this.isEnabled = true;\n    this.isDestroyed = false;\n    this.isInitialized = false;\n    this._transitions = [];\n    this.isTransitioning = false;\n    this._queue = [];\n\n    const el = this._getElementOption(element);\n\n    if (!el) {\n      throw new TypeError('Shuffle needs to be initialized with an element.');\n    }\n\n    this.element = el;\n    this.id = 'shuffle_' + id;\n    id += 1;\n\n    this._init();\n    this.isInitialized = true;\n  }\n\n  _init() {\n    this.items = this._getItems();\n    this.sortedItems = this.items;\n\n    this.options.sizer = this._getElementOption(this.options.sizer);\n\n    // Add class and invalidate styles\n    this.element.classList.add(Shuffle.Classes.BASE);\n\n    // Set initial css for each item\n    this._initItems(this.items);\n\n    // Bind resize events\n    this._onResize = this._getResizeFunction();\n    window.addEventListener('resize', this._onResize);\n\n    // If the page has not already emitted the `load` event, call layout on load.\n    // This avoids layout issues caused by images and fonts loading after the\n    // instance has been initialized.\n    if (document.readyState !== 'complete') {\n      const layout = this.layout.bind(this);\n      window.addEventListener('load', function onLoad() {\n        window.removeEventListener('load', onLoad);\n        layout();\n      });\n    }\n\n    // Get container css all in one request. Causes reflow\n    const containerCss = window.getComputedStyle(this.element, null);\n    const containerWidth = Shuffle.getSize(this.element).width;\n\n    // Add styles to the container if it doesn't have them.\n    this._validateStyles(containerCss);\n\n    // We already got the container's width above, no need to cause another\n    // reflow getting it again... Calculate the number of columns there will be\n    this._setColumns(containerWidth);\n\n    // Kick off!\n    this.filter(this.options.group, this.options.initialSort);\n\n    // The shuffle items haven't had transitions set on them yet so the user\n    // doesn't see the first layout. Set them now that the first layout is done.\n    // First, however, a synchronous layout must be caused for the previous\n    // styles to be applied without transitions.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n    this.setItemTransitions(this.items);\n    this.element.style.transition = `height ${this.options.speed}ms ${this.options.easing}`;\n  }\n\n  /**\n   * Returns a throttled and proxied function for the resize handler.\n   * @return {function}\n   * @private\n   */\n  _getResizeFunction() {\n    const resizeFunction = this._handleResize.bind(this);\n    return this.options.throttle ? this.options.throttle(resizeFunction, this.options.throttleTime) : resizeFunction;\n  }\n\n  /**\n   * Retrieve an element from an option.\n   * @param {string|jQuery|Element} option The option to check.\n   * @return {?Element} The plain element or null.\n   * @private\n   */\n  _getElementOption(option) {\n    // If column width is a string, treat is as a selector and search for the\n    // sizer element within the outermost container\n    if (typeof option === 'string') {\n      return this.element.querySelector(option);\n    }\n\n    // Check for an element\n    if (option && option.nodeType && option.nodeType === 1) {\n      return option;\n    }\n\n    // Check for jQuery object\n    if (option && option.jquery) {\n      return option[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Ensures the shuffle container has the css styles it needs applied to it.\n   * @param {Object} styles Key value pairs for position and overflow.\n   * @private\n   */\n  _validateStyles(styles) {\n    // Position cannot be static.\n    if (styles.position === 'static') {\n      this.element.style.position = 'relative';\n    }\n\n    // Overflow has to be hidden.\n    if (styles.overflow !== 'hidden') {\n      this.element.style.overflow = 'hidden';\n    }\n  }\n\n  /**\n   * Filter the elements by a category.\n   * @param {string|string[]|function(Element):boolean} [category] Category to\n   *     filter by. If it's given, the last category will be used to filter the items.\n   * @param {Array} [collection] Optionally filter a collection. Defaults to\n   *     all the items.\n   * @return {{visible: ShuffleItem[], hidden: ShuffleItem[]}}\n   * @private\n   */\n  _filter(category = this.lastFilter, collection = this.items) {\n    const set = this._getFilteredSets(category, collection);\n\n    // Individually add/remove hidden/visible classes\n    this._toggleFilterClasses(set);\n\n    // Save the last filter in case elements are appended.\n    this.lastFilter = category;\n\n    // This is saved mainly because providing a filter function (like searching)\n    // will overwrite the `lastFilter` property every time its called.\n    if (typeof category === 'string') {\n      this.group = category;\n    }\n\n    return set;\n  }\n\n  /**\n   * Returns an object containing the visible and hidden elements.\n   * @param {string|string[]|function(Element):boolean} category Category or function to filter by.\n   * @param {ShuffleItem[]} items A collection of items to filter.\n   * @return {{visible: ShuffleItem[], hidden: ShuffleItem[]}}\n   * @private\n   */\n  _getFilteredSets(category, items) {\n    let visible = [];\n    const hidden = [];\n\n    // category === 'all', add visible class to everything\n    if (category === Shuffle.ALL_ITEMS) {\n      visible = items;\n\n      // Loop through each item and use provided function to determine\n      // whether to hide it or not.\n    } else {\n      items.forEach((item) => {\n        if (this._doesPassFilter(category, item.element)) {\n          visible.push(item);\n        } else {\n          hidden.push(item);\n        }\n      });\n    }\n\n    return {\n      visible,\n      hidden,\n    };\n  }\n\n  /**\n   * Test an item to see if it passes a category.\n   * @param {string|string[]|function():boolean} category Category or function to filter by.\n   * @param {Element} element An element to test.\n   * @return {boolean} Whether it passes the category/filter.\n   * @private\n   */\n  _doesPassFilter(category, element) {\n    if (typeof category === 'function') {\n      return category.call(element, element, this);\n    }\n\n    // Check each element's data-groups attribute against the given category.\n    const attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\n    const keys = this.options.delimiter ? attr.split(this.options.delimiter) : JSON.parse(attr);\n\n    function testCategory(category) {\n      return keys.includes(category);\n    }\n\n    if (Array.isArray(category)) {\n      if (this.options.filterMode === Shuffle.FilterMode.ANY) {\n        return category.some(testCategory);\n      }\n      return category.every(testCategory);\n    }\n\n    return keys.includes(category);\n  }\n\n  /**\n   * Toggles the visible and hidden class names.\n   * @param {{visible, hidden}} Object with visible and hidden arrays.\n   * @private\n   */\n  _toggleFilterClasses({ visible, hidden }) {\n    visible.forEach((item) => {\n      item.show();\n    });\n\n    hidden.forEach((item) => {\n      item.hide();\n    });\n  }\n\n  /**\n   * Set the initial css for each item\n   * @param {ShuffleItem[]} items Set to initialize.\n   * @private\n   */\n  _initItems(items) {\n    items.forEach((item) => {\n      item.init();\n    });\n  }\n\n  /**\n   * Remove element reference and styles.\n   * @param {ShuffleItem[]} items Set to dispose.\n   * @private\n   */\n  _disposeItems(items) {\n    items.forEach((item) => {\n      item.dispose();\n    });\n  }\n\n  /**\n   * Updates the visible item count.\n   * @private\n   */\n  _updateItemCount() {\n    this.visibleItems = this._getFilteredItems().length;\n  }\n\n  /**\n   * Sets css transform transition on a group of elements. This is not executed\n   * at the same time as `item.init` so that transitions don't occur upon\n   * initialization of a new Shuffle instance.\n   * @param {ShuffleItem[]} items Shuffle items to set transitions on.\n   * @protected\n   */\n  setItemTransitions(items) {\n    const { speed, easing } = this.options;\n    const positionProps = this.options.useTransforms ? ['transform'] : ['top', 'left'];\n\n    // Allow users to transtion other properties if they exist in the `before`\n    // css mapping of the shuffle item.\n    const cssProps = Object.keys(ShuffleItem.Css.HIDDEN.before).map((k) => hyphenate(k));\n    const properties = positionProps.concat(cssProps).join();\n\n    items.forEach((item) => {\n      item.element.style.transitionDuration = speed + 'ms';\n      item.element.style.transitionTimingFunction = easing;\n      item.element.style.transitionProperty = properties;\n    });\n  }\n\n  _getItems() {\n    return Array.from(this.element.children)\n      .filter((el) => el.matches(this.options.itemSelector))\n      .map((el) => new ShuffleItem(el, this.options.isRTL));\n  }\n\n  /**\n   * Combine the current items array with a new one and sort it by DOM order.\n   * @param {ShuffleItem[]} items Items to track.\n   * @return {ShuffleItem[]}\n   */\n  _mergeNewItems(items) {\n    const children = Array.from(this.element.children);\n    return sorter(this.items.concat(items), {\n      by(element) {\n        return children.indexOf(element);\n      },\n    });\n  }\n\n  _getFilteredItems() {\n    return this.items.filter((item) => item.isVisible);\n  }\n\n  _getConcealedItems() {\n    return this.items.filter((item) => !item.isVisible);\n  }\n\n  /**\n   * Returns the column size, based on column width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @param {number} gutterSize Size of the gutters.\n   * @return {number}\n   * @private\n   */\n  _getColumnSize(containerWidth, gutterSize) {\n    let size;\n\n    // If the columnWidth property is a function, then the grid is fluid\n    if (typeof this.options.columnWidth === 'function') {\n      size = this.options.columnWidth(containerWidth);\n\n      // columnWidth option isn't a function, are they using a sizing element?\n    } else if (this.options.sizer) {\n      size = Shuffle.getSize(this.options.sizer).width;\n\n      // if not, how about the explicitly set option?\n    } else if (this.options.columnWidth) {\n      size = this.options.columnWidth;\n\n      // or use the size of the first item\n    } else if (this.items.length > 0) {\n      size = Shuffle.getSize(this.items[0].element, true).width;\n\n      // if there's no items, use size of container\n    } else {\n      size = containerWidth;\n    }\n\n    // Don't let them set a column width of zero.\n    if (size === 0) {\n      size = containerWidth;\n    }\n\n    return size + gutterSize;\n  }\n\n  /**\n   * Returns the gutter size, based on gutter width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @return {number}\n   * @private\n   */\n  _getGutterSize(containerWidth) {\n    let size;\n    if (typeof this.options.gutterWidth === 'function') {\n      size = this.options.gutterWidth(containerWidth);\n    } else if (this.options.sizer) {\n      size = getNumberStyle(this.options.sizer, 'marginLeft');\n    } else {\n      size = this.options.gutterWidth;\n    }\n\n    return size;\n  }\n\n  /**\n   * Calculate the number of columns to be used. Gets css if using sizer element.\n   * @param {number} [containerWidth] Optionally specify a container width if\n   *    it's already available.\n   */\n  _setColumns(containerWidth = Shuffle.getSize(this.element).width) {\n    const gutter = this._getGutterSize(containerWidth);\n    const columnWidth = this._getColumnSize(containerWidth, gutter);\n    let calculatedColumns = (containerWidth + gutter) / columnWidth;\n\n    // Widths given from getStyles are not precise enough...\n    if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) < this.options.columnThreshold) {\n      // e.g. calculatedColumns = 11.998876\n      calculatedColumns = Math.round(calculatedColumns);\n    }\n\n    this.cols = Math.max(Math.floor(calculatedColumns || 0), 1);\n    this.containerWidth = containerWidth;\n    this.colWidth = columnWidth;\n  }\n\n  /**\n   * Adjust the height of the grid\n   */\n  _setContainerSize() {\n    this.element.style.height = this._getContainerSize() + 'px';\n  }\n\n  /**\n   * Based on the column heights, it returns the biggest one.\n   * @return {number}\n   * @private\n   */\n  _getContainerSize() {\n    return arrayMax(this.positions);\n  }\n\n  /**\n   * Get the clamped stagger amount.\n   * @param {number} index Index of the item to be staggered.\n   * @return {number}\n   */\n  _getStaggerAmount(index) {\n    return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\n  }\n\n  /**\n   * Emit an event from this instance.\n   * @param {string} name Event name.\n   * @param {Object} [data={}] Optional object data.\n   */\n  _dispatch(name, data = {}) {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    data.shuffle = this;\n    this.emit(name, data);\n  }\n\n  /**\n   * Zeros out the y columns array, which is used to determine item placement.\n   * @private\n   */\n  _resetCols() {\n    let i = this.cols;\n    this.positions = [];\n    while (i) {\n      i -= 1;\n      this.positions.push(0);\n    }\n  }\n\n  /**\n   * Loops through each item that should be shown and calculates the x, y position.\n   * @param {ShuffleItem[]} items Array of items that will be shown/layed\n   *     out in order in their array.\n   */\n  _layout(items) {\n    const itemPositions = this._getNextPositions(items);\n\n    let count = 0;\n    items.forEach((item, i) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.VISIBLE.after);\n      }\n\n      // If the item will not change its position, do not add it to the render\n      // queue. Transitions don't fire when setting a property to the same value.\n      if (Point.equals(item.point, itemPositions[i]) && !item.isHidden) {\n        item.applyCss(ShuffleItem.Css.VISIBLE.before);\n        callback();\n        return;\n      }\n\n      item.point = itemPositions[i];\n      item.scale = ShuffleItem.Scale.VISIBLE;\n      item.isHidden = false;\n\n      // Clone the object so that the `before` object isn't modified when the\n      // transition delay is added.\n      const styles = this.getStylesForTransition(item, ShuffleItem.Css.VISIBLE.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Return an array of Point instances representing the future positions of\n   * each item.\n   * @param {ShuffleItem[]} items Array of sorted shuffle items.\n   * @return {Point[]}\n   * @private\n   */\n  _getNextPositions(items) {\n    // If position data is going to be changed, add the item's size to the\n    // transformer to allow for calculations.\n    if (this.options.isCentered) {\n      const itemsData = items.map((item, i) => {\n        const itemSize = Shuffle.getSize(item.element, true);\n        const point = this._getItemPosition(itemSize);\n        return new Rect(point.x, point.y, itemSize.width, itemSize.height, i);\n      });\n\n      return this.getTransformedPositions(itemsData, this.containerWidth);\n    }\n\n    // If no transforms are going to happen, simply return an array of the\n    // future points of each item.\n    return items.map((item) => this._getItemPosition(Shuffle.getSize(item.element, true)));\n  }\n\n  /**\n   * Determine the location of the next item, based on its size.\n   * @param {{width: number, height: number}} itemSize Object with width and height.\n   * @return {Point}\n   * @private\n   */\n  _getItemPosition(itemSize) {\n    return getItemPosition({\n      itemSize,\n      positions: this.positions,\n      gridSize: this.colWidth,\n      total: this.cols,\n      threshold: this.options.columnThreshold,\n      buffer: this.options.buffer,\n    });\n  }\n\n  /**\n   * Mutate positions before they're applied.\n   * @param {Rect[]} itemRects Item data objects.\n   * @param {number} containerWidth Width of the containing element.\n   * @return {Point[]}\n   * @protected\n   */\n  getTransformedPositions(itemRects, containerWidth) {\n    return getCenteredPositions(itemRects, containerWidth);\n  }\n\n  /**\n   * Hides the elements that don't match our filter.\n   * @param {ShuffleItem[]} collection Collection to shrink.\n   * @private\n   */\n  _shrink(collection = this._getConcealedItems()) {\n    let count = 0;\n    collection.forEach((item) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.HIDDEN.after);\n      }\n\n      // Continuing would add a transitionend event listener to the element, but\n      // that listener would not execute because the transform and opacity would\n      // stay the same.\n      // The callback is executed here because it is not guaranteed to be called\n      // after the transitionend event because the transitionend could be\n      // canceled if another animation starts.\n      if (item.isHidden) {\n        item.applyCss(ShuffleItem.Css.HIDDEN.before);\n        callback();\n        return;\n      }\n\n      item.scale = ShuffleItem.Scale.HIDDEN;\n      item.isHidden = true;\n\n      const styles = this.getStylesForTransition(item, ShuffleItem.Css.HIDDEN.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Resize handler.\n   * @private\n   */\n  _handleResize() {\n    // If shuffle is disabled, destroyed, don't do anything\n    if (!this.isEnabled || this.isDestroyed) {\n      return;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Returns styles which will be applied to the an item for a transition.\n   * @param {ShuffleItem} item Item to get styles for. Should have updated\n   *   scale and point properties.\n   * @param {Object} styleObject Extra styles that will be used in the transition.\n   * @return {!Object} Transforms for transitions, left/top for animate.\n   * @protected\n   */\n  getStylesForTransition(item, styleObject) {\n    // Clone the object to avoid mutating the original.\n    const styles = { ...styleObject };\n\n    if (this.options.useTransforms) {\n      const sign = this.options.isRTL ? '-' : '';\n      const x = this.options.roundTransforms ? Math.round(item.point.x) : item.point.x;\n      const y = this.options.roundTransforms ? Math.round(item.point.y) : item.point.y;\n      styles.transform = `translate(${sign}${x}px, ${y}px) scale(${item.scale})`;\n    } else {\n      if (this.options.isRTL) {\n        styles.right = item.point.x + 'px';\n      } else {\n        styles.left = item.point.x + 'px';\n      }\n      styles.top = item.point.y + 'px';\n    }\n\n    return styles;\n  }\n\n  /**\n   * Listen for the transition end on an element and execute the itemCallback\n   * when it finishes.\n   * @param {Element} element Element to listen on.\n   * @param {function} itemCallback Callback for the item.\n   * @param {function} done Callback to notify `parallel` that this one is done.\n   */\n  _whenTransitionDone(element, itemCallback, done) {\n    const id = onTransitionEnd(element, (evt) => {\n      itemCallback();\n      done(null, evt);\n    });\n\n    this._transitions.push(id);\n  }\n\n  /**\n   * Return a function which will set CSS styles and call the `done` function\n   * when (if) the transition finishes.\n   * @param {Object} opts Transition object.\n   * @return {function} A function to be called with a `done` function.\n   */\n  _getTransitionFunction(opts) {\n    return (done) => {\n      opts.item.applyCss(opts.styles);\n      this._whenTransitionDone(opts.item.element, opts.callback, done);\n    };\n  }\n\n  /**\n   * Execute the styles gathered in the style queue. This applies styles to elements,\n   * triggering transitions.\n   * @private\n   */\n  _processQueue() {\n    if (this.isTransitioning) {\n      this._cancelMovement();\n    }\n\n    const hasSpeed = this.options.speed > 0;\n    const hasQueue = this._queue.length > 0;\n\n    if (hasQueue && hasSpeed && this.isInitialized) {\n      this._startTransitions(this._queue);\n    } else if (hasQueue) {\n      this._styleImmediately(this._queue);\n      this._dispatch(Shuffle.EventType.LAYOUT);\n\n      // A call to layout happened, but none of the newly visible items will\n      // change position or the transition duration is zero, which will not trigger\n      // the transitionend event.\n    } else {\n      this._dispatch(Shuffle.EventType.LAYOUT);\n    }\n\n    // Remove everything in the style queue\n    this._queue.length = 0;\n  }\n\n  /**\n   * Wait for each transition to finish, the emit the layout event.\n   * @param {Object[]} transitions Array of transition objects.\n   */\n  _startTransitions(transitions) {\n    // Set flag that shuffle is currently in motion.\n    this.isTransitioning = true;\n\n    // Create an array of functions to be called.\n    const callbacks = transitions.map((obj) => this._getTransitionFunction(obj));\n\n    parallel(callbacks, this._movementFinished.bind(this));\n  }\n\n  _cancelMovement() {\n    // Remove the transition end event for each listener.\n    this._transitions.forEach(cancelTransitionEnd);\n\n    // Reset the array.\n    this._transitions.length = 0;\n\n    // Show it's no longer active.\n    this.isTransitioning = false;\n  }\n\n  /**\n   * Apply styles without a transition.\n   * @param {Object[]} objects Array of transition objects.\n   * @private\n   */\n  _styleImmediately(objects) {\n    if (objects.length) {\n      const elements = objects.map((obj) => obj.item.element);\n\n      Shuffle._skipTransitions(elements, () => {\n        objects.forEach((obj) => {\n          obj.item.applyCss(obj.styles);\n          obj.callback();\n        });\n      });\n    }\n  }\n\n  _movementFinished() {\n    this._transitions.length = 0;\n    this.isTransitioning = false;\n    this._dispatch(Shuffle.EventType.LAYOUT);\n  }\n\n  /**\n   * The magic. This is what makes the plugin 'shuffle'\n   * @param {string|string[]|function(Element):boolean} [category] Category to filter by.\n   *     Can be a function, string, or array of strings.\n   * @param {SortOptions} [sortOptions] A sort object which can sort the visible set\n   */\n  filter(category, sortOptions) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (!category || (category && category.length === 0)) {\n      category = Shuffle.ALL_ITEMS; // eslint-disable-line no-param-reassign\n    }\n\n    this._filter(category);\n\n    // Shrink each hidden item\n    this._shrink();\n\n    // How many visible elements?\n    this._updateItemCount();\n\n    // Update transforms on visible elements so they will animate to their new positions.\n    this.sort(sortOptions);\n  }\n\n  /**\n   * Gets the visible elements, sorts them, and passes them to layout.\n   * @param {SortOptions} [sortOptions] The options object to pass to `sorter`.\n   */\n  sort(sortOptions = this.lastSort) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this._resetCols();\n\n    const items = sorter(this._getFilteredItems(), sortOptions);\n    this.sortedItems = items;\n\n    this._layout(items);\n\n    // `_layout` always happens after `_shrink`, so it's safe to process the style\n    // queue here with styles from the shrink method.\n    this._processQueue();\n\n    // Adjust the height of the container.\n    this._setContainerSize();\n\n    this.lastSort = sortOptions;\n  }\n\n  /**\n   * Reposition everything.\n   * @param {boolean} [isOnlyLayout=false] If true, column and gutter widths won't be recalculated.\n   */\n  update(isOnlyLayout = false) {\n    if (this.isEnabled) {\n      if (!isOnlyLayout) {\n        // Get updated colCount\n        this._setColumns();\n      }\n\n      // Layout items\n      this.sort();\n    }\n  }\n\n  /**\n   * Use this instead of `update()` if you don't need the columns and gutters updated\n   * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\n   * could be off.\n   */\n  layout() {\n    this.update(true);\n  }\n\n  /**\n   * New items have been appended to shuffle. Mix them in with the current\n   * filter or sort status.\n   * @param {Element[]} newItems Collection of new items.\n   */\n  add(newItems) {\n    const items = arrayUnique(newItems).map((el) => new ShuffleItem(el, this.options.isRTL));\n\n    // Add classes and set initial positions.\n    this._initItems(items);\n\n    // Determine which items will go with the current filter.\n    this._resetCols();\n\n    const allItems = this._mergeNewItems(items);\n    const sortedItems = sorter(allItems, this.lastSort);\n    const allSortedItemsSet = this._filter(this.lastFilter, sortedItems);\n\n    const isNewItem = (item) => items.includes(item);\n    const applyHiddenState = (item) => {\n      item.scale = ShuffleItem.Scale.HIDDEN;\n      item.isHidden = true;\n      item.applyCss(ShuffleItem.Css.HIDDEN.before);\n      item.applyCss(ShuffleItem.Css.HIDDEN.after);\n    };\n\n    // Layout all items again so that new items get positions.\n    // Synchonously apply positions.\n    const itemPositions = this._getNextPositions(allSortedItemsSet.visible);\n    allSortedItemsSet.visible.forEach((item, i) => {\n      if (isNewItem(item)) {\n        item.point = itemPositions[i];\n        applyHiddenState(item);\n        item.applyCss(this.getStylesForTransition(item, {}));\n      }\n    });\n\n    allSortedItemsSet.hidden.forEach((item) => {\n      if (isNewItem(item)) {\n        applyHiddenState(item);\n      }\n    });\n\n    // Cause layout so that the styles above are applied.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Add transition to each item.\n    this.setItemTransitions(items);\n\n    // Update the list of items.\n    this.items = this._mergeNewItems(items);\n\n    // Update layout/visibility of new and old items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Disables shuffle from updating dimensions and layout on resize\n   */\n  disable() {\n    this.isEnabled = false;\n  }\n\n  /**\n   * Enables shuffle again\n   * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\n   */\n  enable(isUpdateLayout = true) {\n    this.isEnabled = true;\n    if (isUpdateLayout) {\n      this.update();\n    }\n  }\n\n  /**\n   * Remove 1 or more shuffle items.\n   * @param {Element[]} elements An array containing one or more\n   *     elements in shuffle\n   * @return {Shuffle} The shuffle instance.\n   */\n  remove(elements) {\n    if (!elements.length) {\n      return;\n    }\n\n    const collection = arrayUnique(elements);\n\n    const oldItems = collection.map((element) => this.getItemByElement(element)).filter((item) => !!item);\n\n    const handleLayout = () => {\n      this._disposeItems(oldItems);\n\n      // Remove the collection in the callback\n      collection.forEach((element) => {\n        element.parentNode.removeChild(element);\n      });\n\n      this._dispatch(Shuffle.EventType.REMOVED, { collection });\n    };\n\n    // Hide collection first.\n    this._toggleFilterClasses({\n      visible: [],\n      hidden: oldItems,\n    });\n\n    this._shrink(oldItems);\n\n    this.sort();\n\n    // Update the list of items here because `remove` could be called again\n    // with an item that is in the process of being removed.\n    this.items = this.items.filter((item) => !oldItems.includes(item));\n    this._updateItemCount();\n\n    this.once(Shuffle.EventType.LAYOUT, handleLayout);\n  }\n\n  /**\n   * Retrieve a shuffle item by its element.\n   * @param {Element} element Element to look for.\n   * @return {?ShuffleItem} A shuffle item or undefined if it's not found.\n   */\n  getItemByElement(element) {\n    return this.items.find((item) => item.element === element);\n  }\n\n  /**\n   * Dump the elements currently stored and reinitialize all child elements which\n   * match the `itemSelector`.\n   */\n  resetItems() {\n    // Remove refs to current items.\n    this._disposeItems(this.items);\n    this.isInitialized = false;\n\n    // Find new items in the DOM.\n    this.items = this._getItems();\n\n    // Set initial styles on the new items.\n    this._initItems(this.items);\n\n    this.once(Shuffle.EventType.LAYOUT, () => {\n      // Add transition to each item.\n      this.setItemTransitions(this.items);\n      this.isInitialized = true;\n    });\n\n    // Lay out all items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Destroys shuffle, removes events, styles, and classes\n   */\n  destroy() {\n    this._cancelMovement();\n    window.removeEventListener('resize', this._onResize);\n\n    // Reset container styles\n    this.element.classList.remove('shuffle');\n    this.element.removeAttribute('style');\n\n    // Reset individual item styles\n    this._disposeItems(this.items);\n\n    this.items.length = 0;\n    this.sortedItems.length = 0;\n    this._transitions.length = 0;\n\n    // Null DOM references\n    this.options.sizer = null;\n    this.element = null;\n\n    // Set a flag so if a debounced resize has been triggered,\n    // it can first check if it is actually isDestroyed and not doing anything\n    this.isDestroyed = true;\n    this.isEnabled = false;\n  }\n\n  /**\n   * Returns the outer width of an element, optionally including its margins.\n   *\n   * There are a few different methods for getting the width of an element, none of\n   * which work perfectly for all Shuffle's use cases.\n   *\n   * 1. getBoundingClientRect() `left` and `right` properties.\n   *   - Accounts for transform scaled elements, making it useless for Shuffle\n   *   elements which have shrunk.\n   * 2. The `offsetWidth` property.\n   *   - This value stays the same regardless of the elements transform property,\n   *   however, it does not return subpixel values.\n   * 3. getComputedStyle()\n   *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\n   *   padding and border when box-sizing: border-box is set, requiring a feature\n   *   test and extra work to add the padding back for IE and other browsers which\n   *   follow the W3C spec here.\n   *\n   * @param {Element} element The element.\n   * @param {boolean} [includeMargins=false] Whether to include margins.\n   * @return {{width: number, height: number}} The width and height.\n   */\n  static getSize(element, includeMargins = false) {\n    // Store the styles so that they can be used by others without asking for it again.\n    const styles = window.getComputedStyle(element, null);\n    let width = getNumberStyle(element, 'width', styles);\n    let height = getNumberStyle(element, 'height', styles);\n\n    if (includeMargins) {\n      const marginLeft = getNumberStyle(element, 'marginLeft', styles);\n      const marginRight = getNumberStyle(element, 'marginRight', styles);\n      const marginTop = getNumberStyle(element, 'marginTop', styles);\n      const marginBottom = getNumberStyle(element, 'marginBottom', styles);\n      width += marginLeft + marginRight;\n      height += marginTop + marginBottom;\n    }\n\n    return {\n      width,\n      height,\n    };\n  }\n\n  /**\n   * Change a property or execute a function which will not have a transition\n   * @param {Element[]} elements DOM elements that won't be transitioned.\n   * @param {function} callback A function which will be called while transition\n   *     is set to 0ms.\n   * @private\n   */\n  static _skipTransitions(elements, callback) {\n    const zero = '0ms';\n\n    // Save current duration and delay.\n    const data = elements.map((element) => {\n      const { style } = element;\n      const duration = style.transitionDuration;\n      const delay = style.transitionDelay;\n\n      // Set the duration to zero so it happens immediately\n      style.transitionDuration = zero;\n      style.transitionDelay = zero;\n\n      return {\n        duration,\n        delay,\n      };\n    });\n\n    callback();\n\n    // Cause forced synchronous layout.\n    elements[0].offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Put the duration back\n    elements.forEach((element, i) => {\n      element.style.transitionDuration = data[i].duration;\n      element.style.transitionDelay = data[i].delay;\n    });\n  }\n}\n\nShuffle.ShuffleItem = ShuffleItem;\n\nShuffle.ALL_ITEMS = 'all';\nShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\n\n/** @enum {string} */\nShuffle.EventType = {\n  LAYOUT: 'shuffle:layout',\n  REMOVED: 'shuffle:removed',\n};\n\n/** @enum {string} */\nShuffle.Classes = Classes;\n\n/** @enum {string} */\nShuffle.FilterMode = {\n  ANY: 'any',\n  ALL: 'all',\n};\n\n// Overrideable options\nShuffle.options = {\n  // Initial filter group.\n  group: Shuffle.ALL_ITEMS,\n\n  // Transition/animation speed (milliseconds).\n  speed: 250,\n\n  // CSS easing function to use.\n  easing: 'cubic-bezier(0.4, 0.0, 0.2, 1)',\n\n  // e.g. '.picture-item'.\n  itemSelector: '*',\n\n  // Element or selector string. Use an element to determine the size of columns\n  // and gutters.\n  sizer: null,\n\n  // A static number or function that tells the plugin how wide the gutters\n  // between columns are (in pixels).\n  gutterWidth: 0,\n\n  // A static number or function that returns a number which tells the plugin\n  // how wide the columns are (in pixels).\n  columnWidth: 0,\n\n  // If your group is not json, and is comma delimeted, you could set delimiter\n  // to ','.\n  delimiter: null,\n\n  // Useful for percentage based heights when they might not always be exactly\n  // the same (in pixels).\n  buffer: 0,\n\n  // Reading the width of elements isn't precise enough and can cause columns to\n  // jump between values.\n  columnThreshold: 0.01,\n\n  // Shuffle can be isInitialized with a sort object. It is the same object\n  // given to the sort method.\n  initialSort: null,\n\n  // By default, shuffle will throttle resize events. This can be changed or\n  // removed.\n  throttle,\n\n  // How often shuffle can be called on resize (in milliseconds).\n  throttleTime: 300,\n\n  // Transition delay offset for each item in milliseconds.\n  staggerAmount: 15,\n\n  // Maximum stagger delay in milliseconds.\n  staggerAmountMax: 150,\n\n  // Whether to use transforms or absolute positioning.\n  useTransforms: true,\n\n  // Affects using an array with filter. e.g. `filter(['one', 'two'])`. With \"any\",\n  // the element passes the test if any of its groups are in the array. With \"all\",\n  // the element only passes if all groups are in the array.\n  filterMode: Shuffle.FilterMode.ANY,\n\n  // Attempt to center grid items in each row.\n  isCentered: false,\n\n  // Attempt to align grid items to right.\n  isRTL: false,\n\n  // Whether to round pixel values used in translate(x, y). This usually avoids\n  // blurriness.\n  roundTransforms: true,\n};\n\nShuffle.Point = Point;\nShuffle.Rect = Rect;\n\n// Expose for testing. Hack at your own risk.\nShuffle.__sorter = sorter;\nShuffle.__getColumnSpan = getColumnSpan;\nShuffle.__getAvailablePositions = getAvailablePositions;\nShuffle.__getShortColumn = getShortColumn;\nShuffle.__getCenteredPositions = getCenteredPositions;\n\nexport default Shuffle;\n"],"names":["tinyEmitterModule","getNumber","value","parseFloat","Point","constructor","x","y","equals","a","b","Rect","w","h","id","left","top","width","height","intersects","BASE","SHUFFLE_ITEM","VISIBLE","HIDDEN","ShuffleItem","element","isRTL","isVisible","isHidden","show","classList","remove","Classes","add","removeAttribute","hide","setAttribute","init","addClasses","applyCss","Css","INITIAL","DIRECTION","rtl","ltr","scale","Scale","point","classes","forEach","className","removeClasses","obj","Object","keys","key","style","dispose","position","visibility","willChange","right","before","opacity","after","transitionDelay","document","body","documentElement","e","createElement","cssText","appendChild","window","getComputedStyle","Math","round","removeChild","getNumberStyle","styles","testComputedSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","randomize","array","n","length","i","floor","random","temp","defaults","reverse","by","compare","sorter","arr","options","opts","original","Array","from","revert","sort","valA","valB","undefined","transitions","eventName","count","uniqueId","cancelTransitionEnd","removeEventListener","listener","onTransitionEnd","callback","evt","currentTarget","target","addEventListener","arrayMax","max","arrayMin","min","getColumnSpan","itemWidth","columnWidth","columns","threshold","columnSpan","abs","ceil","getAvailablePositions","positions","available","push","slice","getShortColumn","buffer","minPosition","len","getItemPosition","itemSize","gridSize","total","span","setY","shortColumnIndex","setHeight","getCenteredPositions","itemRects","containerWidth","rowMap","itemRect","rects","rows","centeredRows","lastItem","end","offset","finalRects","canMove","newRects","every","r","newRect","noOverlap","some","intersectingRect","hasOverlap","rowIndex","findIndex","items","includes","splice","concat","flat","map","hyphenate","str","replace","m1","toLowerCase","arrayUnique","Set","Shuffle","TinyEmitter","lastSort","group","ALL_ITEMS","lastFilter","isEnabled","isDestroyed","isInitialized","_transitions","isTransitioning","_queue","el","_getElementOption","TypeError","_init","_getItems","sortedItems","sizer","_initItems","_onResize","_getResizeFunction","readyState","layout","bind","onLoad","containerCss","getSize","_validateStyles","_setColumns","filter","initialSort","offsetWidth","setItemTransitions","transition","speed","easing","resizeFunction","_handleResize","throttle","throttleTime","option","querySelector","nodeType","jquery","overflow","_filter","category","collection","set","_getFilteredSets","_toggleFilterClasses","visible","hidden","item","_doesPassFilter","call","attr","getAttribute","FILTER_ATTRIBUTE_KEY","delimiter","split","JSON","parse","testCategory","isArray","filterMode","FilterMode","ANY","_disposeItems","_updateItemCount","visibleItems","_getFilteredItems","positionProps","useTransforms","cssProps","k","properties","join","transitionDuration","transitionTimingFunction","transitionProperty","children","matches","itemSelector","_mergeNewItems","indexOf","_getConcealedItems","_getColumnSize","gutterSize","size","_getGutterSize","gutterWidth","gutter","calculatedColumns","columnThreshold","cols","colWidth","_setContainerSize","_getContainerSize","_getStaggerAmount","index","staggerAmount","staggerAmountMax","_dispatch","name","data","shuffle","emit","_resetCols","_layout","itemPositions","_getNextPositions","getStylesForTransition","isCentered","itemsData","_getItemPosition","getTransformedPositions","_shrink","update","styleObject","sign","roundTransforms","transform","_whenTransitionDone","itemCallback","done","_getTransitionFunction","_processQueue","_cancelMovement","hasSpeed","hasQueue","_startTransitions","_styleImmediately","EventType","LAYOUT","callbacks","parallel","_movementFinished","objects","elements","_skipTransitions","sortOptions","isOnlyLayout","newItems","allItems","allSortedItemsSet","isNewItem","applyHiddenState","disable","enable","isUpdateLayout","oldItems","getItemByElement","handleLayout","parentNode","REMOVED","once","find","resetItems","destroy","includeMargins","marginLeft","marginRight","marginTop","marginBottom","zero","duration","delay","ALL","__sorter","__getColumnSpan","__getAvailablePositions","__getShortColumn","__getCenteredPositions"],"mappings":"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"}